Advanced RNA-seq training - Timecourse
========================================================
author: Damir Baranasic
date: 01.12.2017
autosize: true

Installed packages
========================================================

Installed with `install.packages`:
- tidyverse
- ggplot2

Installed with `biocInstaller`:
- maSigPro
- DESeq2

Slide With Code
========================================================

```{r}
summary(cars)
```

Slide With Plot
========================================================

```{r, echo=FALSE}
plot(cars)
```

RNA-seq
========================================================

- allele specific expression
- gene fusion
- lncRNA
- eRNA
- alterantively spliced variants

Time course experiments
========================================================

1. Single time series
  - one condition
  - all time points compared to the first one (control)
2. Multi time series
  - several conditions simultaneously
  - controls are sampled over time with the samples
3. Periodicity and cyclic time series
  - sigle or multiple conditions
  - reoccuring exoression patterns and their difference between conditions
  - complex --> a lot of samples needed and synchronisation
  
Experimental worklflow
========================================================

Similar to static algorithms

// insert image here

Experimental design
========================================================

Critical:
  - number of time points
  - number of replicates
  
cost ~ statistical power

- there are tools to estimate this parameters, but they don't consider multi-factor experiments

Generaly, when in doubt:
  - more replicates better than greater sequencing depth
  
Bad design:
  - - statistical power
  - + number of FP
  
Analysis
========================================================

Static tools:
  - sequencing depth and library size
  - batch effect --> protocol, sequencing platform, technical variability etc.
  
Do not consider Correlation between neighbouring time points!

Questions for analysis
========================================================

Number of replicates?

Experimantal design? (two-way or multi-factor)

Differential expression of RNA isoforms?

Data used in this case study
========================================================

## Christelle Etard, Olivier Armant, Urmas Roostalu, Victor Gourain, Marco Ferg and Uwe Str√§hle

# Loss of function of myosin chaperones triggers Hsf1-mediated transcriptional response in skeletal muscle cells

*Genome Biology* 2015 **16**:267 <https://doi.org/10.1186/s13059-015-0825-8>

```
RNA-seq_Strahle_Lab_0005AS.<SequencingID>.USERvgourain.R.ReadsPerGene.out.tab
```

|Hpf |      wt     |    unc45b   |
|:--:|:-----------:|:-----------:|
| 24 | DCD001548SQ | DCD001560SQ |
|    | DCD001559SQ | DCD001554SQ |
| 48 | DCD001546SQ | DCD001564SQ |
|    | DCD001558SQ | DCD001555SQ |
| 72 | DCD001547SQ | DCD001565SQ |
|    | DCD001545SQ | DCD001551SQ |

All the libraries were unstranded paired-ended sequenced on Illumina HiSeq 2000 producing 50bp long reads

Read the reads per gene counts
========================================================

```{r tidy=TRUE}
seq_ids = c("DCD001548SQ", "DCD001559SQ", "DCD001546SQ", "DCD001558SQ", "DCD001547SQ", "DCD001545SQ",
            "DCD001560SQ", "DCD001554SQ", "DCD001564SQ", "DCD001555SQ", "DCD001565SQ", "DCD001551SQ")
files = sapply(seq_ids, function(x) paste("data/RNA-seq_Strahle_Lab_0005AS.", x, ".USERvgourain.R.ReadsPerGene.out.tab", sep = ""), USE.NAMES = FALSE)
head(files, n = 4)
readTagsPerGene <- function(x){
  out <- read.csv(x, skip = 4, header = FALSE, sep = "\t", row.names = 1,
                  col.names = c("","totalCount", "forwardCount", "reverseCount"))
  out
}
allReadsCounts <- lapply(files, readTagsPerGene)
geneNames <- row.names(allReadsCounts[[1]])
totalReadsCount <- sapply(allReadsCounts, function(x) x$totalCount)
rownames(totalReadsCount) <- geneNames
head(totalReadsCount, n = 2)

```

Make design matrix
========================================================

```{r tidy = TRUE}

type <- rep(c("wt", "mut"), each = 6)
type
repl <- rep(c("1", "2"), times = 6)
repl
time = rep(c("24", "48", "72"), each = 2, times = 2)
time
sample <- Map(function(x, y, z) paste(x, y, z, sep = "_"), type, time, repl)
colnames(totalReadsCount) <- sample
coldata <- data.frame(condition = type, time = time)
row.names(coldata) <- sample
head(coldata, n = 4)

```

Data normalization

```{r tidy = TRUE}

library(DESeq2)
dds <- DESeqDataSetFromMatrix(countData = totalReadsCount, colData = coldata, design = ~ time + condition
dds <- DESeq(dds)
normalizedData <- counts(dds, normalized = TRUE)


```
